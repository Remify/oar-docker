## Customize oarcluster image

- enable_passwordless_sudo:
  - exec_in: cp /etc/sudoers /etc/sudoers.orig
  - exec_in: sed -i.bkp -e 's/%sudo\s\+ALL=(ALL\(:ALL\)\?)\s\+ALL/%sudo ALL=NOPASSWD:ALL/g' /etc/sudoers

- container_lib_path: /var/lib/container

- fix_permission:
  - on_export_init:
    - exec_in: chown -R $$user_name:$$user_name /home/$$user_name

## Install init process.
- install_my_init_script:
  - local2in:
    - $$kameleon_recipe_dir/assets/sbin/my_init
    - /usr/local/sbin/my_init
  - exec_in: chmod +x /usr/local/sbin/my_init
  - exec_in: mkdir -p $$container_lib_path/my_init.d
  - exec_in: mkdir -p $$container_lib_path/container_environment
  - exec_in: touch $$container_lib_path/container_environment.sh
  - exec_in: touch $$container_lib_path/container_environment.json
  - exec_in: chmod 700 $$container_lib_path/container_environment
  - exec_in: chmod 600 $$container_lib_path/container_environment.sh $$container_lib_path/container_environment.json

- configure_supervisor:
  - exec_in: mkdir -p $$container_lib_path/supervisor/conf.d
  - exec_in: mkdir -p $$container_lib_path/supervisor/log
  - exec_in: rm -rf /etc/supervisor
  - exec_in: ln -sf $$container_lib_path/supervisor /etc/supervisor
  - exec_in: ln -sf $$container_lib_path/supervisor/log /var/log/supervisor
  - local2in:
    - $$kameleon_recipe_dir/assets/config/supervisord.conf
    - /etc/supervisor/supervisord.conf

- configure_sshd_daemon:
  - local2in:
    - $$kameleon_recipe_dir/assets/supervisor/sshd.conf
    - /etc/supervisor/conf.d/sshd.conf
  - exec_in: mv /etc/ssh $$container_lib_path/ssh
  - exec_in: ln -sf $$container_lib_path/ssh /etc/ssh
  - local2in:
    - $$kameleon_recipe_dir/assets/config/sshd_config
    - /etc/ssh/sshd_config
  - local2in:
    - $$kameleon_recipe_dir/assets/sbin/sshd
    - /usr/local/sbin/sshd
  - exec_in: chmod +x /usr/local/sbin/sshd
  - exec_in: mkdir -p /var/run/sshd

- configure_rsyslogd_daemon:
  - local2in:
    - $$kameleon_recipe_dir/assets/supervisor/rsyslogd.conf
    - /etc/supervisor/conf.d/rsyslogd.conf

- add_helpers_scripts:
  # This tool runs a command as another user and sets $HOME.
  - local2in:
    - $$kameleon_recipe_dir/assets/sbin/setuser
    - /usr/local/sbin/setuser
  - exec_in: chmod +x /usr/local/sbin/setuser
  # This tool allows you to monitor multiple logfiles (local or remote) in a terminal
  - local2in:
    - $$kameleon_recipe_dir/assets/sbin/rtail
    - /usr/local/sbin/rtail
  - exec_in: chmod +x /usr/local/sbin/rtail
  - local2in:
    - $$kameleon_recipe_dir/assets/sbin/split_ssh_pane
    - /usr/local/bin/split_ssh_pane
  - exec_in: chmod 755 /usr/local/bin/split_ssh_pane
  - local2in:
    - $$kameleon_recipe_dir/assets/sbin/ps_mem.py
    - /usr/local/sbin/psmem
  - write_in:
    - /usr/local/bin/psmem
    - |
      #!/usr/bin/env bash
      sudo /usr/local/sbin/psmem $@
  - exec_in: chmod 755 /usr/local/sbin/psmem /usr/local/bin/psmem

- configure_insecure_ssh_keys:
  - local2in:
    - $$kameleon_recipe_dir/assets/config/insecure_key.pub
    - $$container_lib_path/insecure_key.pub
  - local2in:
    - $$kameleon_recipe_dir/assets/config/insecure_key
    - $$container_lib_path/insecure_key
  - local2in:
    - $$kameleon_recipe_dir/assets/sbin/enable_insecure_key
    - /usr/local/sbin/enable_insecure_key
  - exec_in: chmod +x /usr/local/sbin/enable_insecure_key
  - exec_in: mkdir -p /root/.ssh
  - exec_in: chmod 700 /root/.ssh
  - exec_in: chown root:root /root/.ssh
  - exec_in: chmod 644 $$container_lib_path/insecure_key*
  - exec_in: chown root:root $$container_lib_path/insecure_key*

- configure_kernel:
  - write_in:
    - /etc/kernel-img.conf
    - |
      do_symlinks = yes
      relative_links = yes
      do_bootloader = yes
      do_bootfloppy = no
      do_initrd = yes
      link_in_boot = no

- blacklist_unused_modules:
  - exec_in: echo "blacklist pcspkr" >> /etc/modprobe.d/fbdev-blacklist.conf

- enable_9p_modules:
  - exec_in: printf '%s\n' 9p 9pnet 9pnet_virtio | tee -a /etc/initramfs-tools/modules

- update_initramfs:
  - exec_in: update-initramfs -u

- install_python_dev_tools:
  - exec_in: pip install ipdb ipython grin termcolor

- fix_ssh_forwarding_agent_with_sudo:
  - write_in:
    - /etc/sudoers.d/root_ssh_agent
    - |
      Defaults env_keep += "SSH_AUTH_SOCK"
  - exec_in: chmod 0440 /etc/sudoers.d/root_ssh_agent

- configure_bash:
  - local2in:
    - $$kameleon_recipe_dir/assets/config/bashrc
    - /home/$$user_name/.bashrc
  - local2in:
    - $$kameleon_recipe_dir/assets/config/bashrc
    - /root/.bashrc

- configure_vim:
  - local2in:
    - $$kameleon_recipe_dir/assets/config/vimrc
    - /home/$$user_name/.vimrc
  - local2in:
    - $$kameleon_recipe_dir/assets/config/vimrc
    - /root/.vimrc
  - exec_in: update-alternatives --set editor /usr/bin/vim.basic

- enable_wheezy_backports:
  - exec_in: echo "deb $$apt_repository wheezy-backports main contrib non-free" >> /etc/apt/sources.list
  - exec_in: apt-get update -q

- install_tmux_from_backports:
  - exec_in: apt-get -y --force-yes install -t wheezy-backports tmux

- configure_tmux:
  - local2in:
    - $$kameleon_recipe_dir/assets/config/tmux.conf
    - /home/$$user_name/.tmux.conf

  - local2in:
    - $$kameleon_recipe_dir/assets/config/tmux.conf
    - /root/.tmux.conf

- configure_ssh_client:
  - local2in:
    - $$kameleon_recipe_dir/assets/config/sshrc
    - /home/$$user_name/.ssh/rc
  - local2in:
    - $$kameleon_recipe_dir/assets/config/tmux.conf
    - /root/.ssh/rc
  - exec_in: chmod +x /home/$$user_name/.ssh/rc /root/.ssh/rc

- configure_git:
  - local2in:
    - $$kameleon_recipe_dir/assets/config/gitconfig
    - /home/$$user_name/.gitconfig
  - local2in:
    - $$kameleon_recipe_dir/assets/config/gitconfig
    - /root/.gitconfig

- install_docker:
  - download_file_in:
    - "https://get.docker.io/builds/Linux/x86_64/docker-latest"
    - /usr/local/sbin/docker
  - write_in:
    - /usr/local/bin/docker
    - |
      #!/usr/bin/env bash
      sudo /usr/local/sbin/docker $@
  - exec_in: chmod 755 /usr/local/sbin/docker /usr/local/bin/docker
